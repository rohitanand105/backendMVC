"use strict";

var normalizeOpts = require("es5-ext/object/normalize-options")
  , resolveLength = require("memoizee/lib/resolve-length")
  , plain         = require("memoizee/plain");

module.exports = function (fn/*, options*/) {
	var options = normalizeOpts(arguments[1]), length;

	if (!options.normalizer) {
		length = options.length = resolveLength(options.length, fn.length, options.async);
		if (length !== 0) {
			if (options.primitive) {
				if (length === false) {
					options.normalizer = require("memoizee/normalizers/primitive");
				} else if (length > 1) {
					options.normalizer = require("memoizee/normalizers/get-primitive-fixed")(length);
				}
			} else if (length === false) options.normalizer = require("memoizee/normalizers/get")();
			else if (length === 1) options.normalizer = require("memoizee/normalizers/get-1")();
			else options.normalizer = require("memoizee/normalizers/get-fixed")(length);
		}
	}

	// Assure extensions
	if (options.async) require("memoizee/ext/async");
	if (options.promise) require("memoizee/ext/promise");
	if (options.dispose) require("memoizee/ext/dispose");
	if (options.maxAge) require("memoizee/ext/max-age");
	if (options.max) require("memoizee/ext/max");
	if (options.refCounter) require("memoizee/ext/ref-counter");

	return plain(fn, options);
};
